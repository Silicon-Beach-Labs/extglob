'use strict';

require('mocha');
var argv = require('yargs-parser')(process.argv.slice(2));
var assert = require('assert');
var extglob = require('..');
var isMatch = extglob.isMatch;

if (argv.mm) {
  isMatch = require('minimatch');
}

describe('running extglob against minimatch tests', function() {
  it('miscellaneous bash tests', function() {
    assert(!isMatch('*(a|b[)', '*(a|b\\[)'));
    assert(!isMatch('123abc', 'ab*d+(e|f)'));
    assert(!isMatch('123abc', 'ab?*(e|f)'));
    assert(!isMatch('a', '!(a)'));
    assert(!isMatch('a', '(b)'));
    assert(!isMatch('a', '??'));
    assert(!isMatch('a', 'a??b'));
    assert(!isMatch('a', 'b?(a|b)'));
    assert(!isMatch('a.', '*.+(b|d)'));
    assert(!isMatch('a.a', '!(*.[a-b]*)'));
    assert(!isMatch('a.a', '!(*.a|*.b|*.c)'));
    assert(!isMatch('a.a', '!(*[a-b].[a-b]*)'));
    assert(!isMatch('a.a', '!*.(a|b)'));
    assert(!isMatch('a.a', '!*.(a|b)*'));
    assert(!isMatch('a.a', '*.!(a)'));
    assert(!isMatch('a.a', '*.+(b|d)'));
    assert(!isMatch('a.a.a', '!(*.[a-b]*)'));
    assert(!isMatch('a.a.a', '!(*[a-b].[a-b]*)'));
    assert(!isMatch('a.a.a', '!*.(a|b)'));
    assert(!isMatch('a.a.a', '!*.(a|b)*'));
    assert(!isMatch('a.a.a', '*.+(b|d)'));
    assert(!isMatch('a.abcd', '!(*.a|*.b|*.c)'));
    assert(!isMatch('a.abcd', '!(*.a|*.b|*.c)*'));
    assert(!isMatch('a.abcd', '*.!(a|b|c)'));
    assert(!isMatch('a.abcd', '*.!(a|b|c)*'));
    assert(!isMatch('a.b', '!(*.*)'));
    assert(!isMatch('a.b', '!(*.[a-b]*)'));
    assert(!isMatch('a.b', '!(*[a-b].[a-b]*)'));
    assert(!isMatch('a.b', '!*.(a|b)'));
    assert(!isMatch('a.b', '!*.(a|b)*'));
    assert(!isMatch('a.bb', '!(*.[a-b]*)'));
    assert(!isMatch('a.bb', '!(*[a-b].[a-b]*)'));
    assert(!isMatch('a.bb', '!*.(a|b)'));
    assert(!isMatch('a.bb', '!*.(a|b)*'));
    assert(!isMatch('a.ccc', '!*.(a|b)'));
    assert(!isMatch('a.ccc', '!*.(a|b)*'));
    assert(!isMatch('a.ccc', '*.+(b|d)'));
    assert(!isMatch('a.js', '!(*.js)'));
    assert(!isMatch('a.js', '*.!(js)'));
    assert(!isMatch('a.js.js', '!(*.js)'));
    assert(!isMatch('aa', '?'));
    assert(!isMatch('aa', '@(a)b'));
    assert(!isMatch('aa', 'a??b'));
    assert(!isMatch('aab', '?'));
    assert(!isMatch('aab', '??'));
    assert(!isMatch('aab', '@(c)b'));
    assert(!isMatch('ab', 'a!(@(b|B))'));
    assert(!isMatch('aB', 'a!(@(b|B))'));
    assert(!isMatch('ab', 'a(*b'));
    assert(!isMatch('ab', 'ab**(e|f)g'));
    assert(!isMatch('ab', 'ab*+(e|f)'));
    assert(!isMatch('ab', 'ab*d+(e|f)'));
    assert(!isMatch('ab', 'ab?*(e|f)'));
    assert(!isMatch('abcdef', '(a+|b)+'));
    assert(!isMatch('abcdef', 'ab**(e|f)g'));
    assert(!isMatch('abcdef', 'ab?*(e|f)'));
    assert(!isMatch('abcfef', '(a+|b)+'));
    assert(!isMatch('abcfef', 'ab**(e|f)g'));
    assert(!isMatch('abcfef', 'ab*d+(e|f)'));
    assert(!isMatch('abcfefg', '(a+|b)+'));
    assert(!isMatch('abcfefg', 'ab*d+(e|f)'));
    assert(!isMatch('abcfefg', 'ab?*(e|f)'));
    assert(!isMatch('abd', '(a+|b)+'));
    assert(!isMatch('abd', 'a!(@(b|B))d'));
    assert(!isMatch('abd', 'ab*d+(e|f)'));
    assert(!isMatch('abef', '(a+|b)+'));
    assert(!isMatch('abef', '*(a+|b)'));
    assert(!isMatch('abef', 'ab**(e|f)g'));
    assert(!isMatch('abef', 'ab*d+(e|f)'));
    assert(!isMatch('acd', '(a+|b)+'));
    assert(!isMatch('acd', 'ab*d+(e|f)'));
    assert(!isMatch('acd', 'ab?*(e|f)'));
    assert(!isMatch('ax', 'a?(b*)'));
    assert(!isMatch('b/a', '!(b/a)'));
    assert(!isMatch('baaac', '*(@(a))a@(c)'));
    assert(!isMatch('bb', 'a?(a|b)'));
    assert(!isMatch('c', '*(@(a))a@(c)'));
    assert(!isMatch('c.a', '!(*.[a-b]*)'));
    assert(!isMatch('c.a', '!*.(a|b)'));
    assert(!isMatch('c.a', '!*.(a|b)*'));
    assert(!isMatch('c.a', '*.!(a)'));
    assert(!isMatch('c.a', '*.+(b|d)'));
    assert(!isMatch('c.js', '!(*.js)'));
    assert(!isMatch('c.js', '*.!(js)'));
    assert(!isMatch('cow', '.!(*.*)'));
    assert(!isMatch('d.a.d', '!*.(a|b)'));
    assert(!isMatch('d.a.d', '!*.(a|b)*'));
    assert(!isMatch('egz', '@(b+(c)d|e+(f)g?|?(h)i@(j|k))'));
    assert(!isMatch('f', '!(f)'));
    assert(!isMatch('f', '*(!(f))'));
    assert(!isMatch('f', '+(!(f))'));
    assert(!isMatch('f.a', '!(*.a|*.b|*.c)'));
    assert(!isMatch('f.a', '*.!(a|b|c)'));
    assert(!isMatch('foo', '!(foo)'));
    assert(!isMatch('foo', '!(foo)*')); // bash 4.3 disagrees
    assert(!isMatch('foo', '!(foo)+'));
    assert(!isMatch('foo', '!(foo)b*'));
    assert(!isMatch('foo', '*(!(foo))'));
    assert(!isMatch('foo.js.js', '*.!(js)*'));
    assert(!isMatch('foo.js.js', '*.!(js)*.!(js)'));
    assert(!isMatch('foo.js.js', '*.!(js)+'));
    assert(!isMatch('foob', '!(foo)b*'));
    assert(!isMatch('foobar', '!(foo)*')); // bash 4.3 disagrees
    assert(!isMatch('foobar', '!(foo)b*'));
    assert(!isMatch('foobb', '!(foo)b*'));
    assert(!isMatch('foooofof', '*(f+(o))'));
    assert(!isMatch('foooofofx', '*(f*(o))'));
    assert(!isMatch('foooxfooxofoxfooox', '*(f*(o)x)'));
    assert(!isMatch('mad.moo.cow', '!(*.*).!(*.*)'));
    assert(!isMatch('mad.moo.cow', '.!(*.*)'));
    assert(!isMatch('Makefile.in', '!(*.c|*.h|Makefile.in|config*|README)'));
    assert(!isMatch('moo', '.!(*.*)'));
    assert(!isMatch('moo.cow', '!(*.*).!(*.*)')); // bash 4.3 disagrees
    assert(!isMatch('moo.cow', '.!(*.*)'));
    assert(!isMatch('mucca.pazza', 'mu!(*(c))?.pa!(*(z))?'));
    assert(!isMatch('ofooofoofofooo', '*(f*(o))'));
    assert(!isMatch('ofoooxoofxoofoooxoofxofo', '*(*(of*(o)x)o)'));
    assert(!isMatch('oxfoxfox', '*(oxf+(ox))'));
    assert(!isMatch('shell.c', '!(*.c|*.h|Makefile.in|config*|README)'));
    assert(!isMatch('xfoooofof', '*(f*(o))'));
    assert(!isMatch('zoot', '@(!(z*)|*x)'));
    assert(!isMatch('zz', '(a+|b)*'));
    assert(isMatch('a', '(a)'));
    assert(isMatch('a', '*(a)'));
    assert(isMatch('a', '+(a)'));
    assert(isMatch('a', '?'));
    assert(isMatch('a', '?(a|b)'));
    assert(isMatch('a', 'a?(a|b)'));
    assert(isMatch('a', 'a?(x)'));
    assert(isMatch('a((((b', 'a(*b'));
    assert(isMatch('a((b', 'a(*b'));
    assert(isMatch('a(b', 'a(*b'));
    assert(isMatch('a.', '!(*.a|*.b|*.c)'));
    assert(isMatch('a.', '*!(.a|.b|.c)'));
    assert(isMatch('a.', '*.!(a)'));
    assert(isMatch('a.', '*.!(a|b|c)'));
    assert(isMatch('a.a', '(a|d).(a|b)*'));
    assert(isMatch('a.a', '*!(.a|.b|.c)'));
    assert(isMatch('a.a.a', '*.!(a)'));
    assert(isMatch('a.abcd', '*!(*.a|*.b|*.c)*'));
    assert(isMatch('a.abcd', '*!(.a|.b|.c)'));
    assert(isMatch('a.b', '(a|d).(a|b)*'));
    assert(isMatch('a.b', '*!(.a|.b|.c)'));
    assert(isMatch('a.b', '*.!(a)'));
    assert(isMatch('a.b', '*.+(b|d)'));
    assert(isMatch('a.bb', '(a|d).(a|b)*'));
    assert(isMatch('a.bb', '*.+(b|d)'));
    assert(isMatch('a.c', '*!(.a|.b|.c)'));
    assert(isMatch('a.c.d', '!(*.a|*.b|*.c)'));
    assert(isMatch('a.c.d', '*!(.a|.b|.c)'));
    assert(isMatch('a.c.d', '*.!(a|b|c)'));
    assert(isMatch('a.ccc', '!(*.[a-b]*)'));
    assert(isMatch('a.ccc', '!(*[a-b].[a-b]*)'));
    assert(isMatch('a.js', '*!(.js)'));
    assert(isMatch('a.js.js', '*!(.js)'));
    assert(isMatch('a.js.js', '*.!(js)'));
    assert(isMatch('a.md', '!(*.js)'));
    assert(isMatch('a.md', '*!(.js)'));
    assert(isMatch('a.md', '*.!(js)'));
    assert(isMatch('aa', '!(a)'));
    assert(isMatch('aaac', '*(@(a))a@(c)'));
    assert(isMatch('aab', 'a??b'));
    assert(isMatch('aac', '*(@(a))a@(c)'));
    assert(isMatch('ab', '!(*.*)'));
    assert(isMatch('ab', '(a+|b)+'));
    assert(isMatch('ab', 'ab**(e|f)'));
    assert(isMatch('ab]', 'a!(@(b|B))'));
    assert(isMatch('abab', 'ab**(e|f)'));
    assert(isMatch('abb', '!(*.*)'));
    assert(isMatch('abbcd', '@(ab|a*(b))*(c)d'));
    assert(isMatch('aBc', 'a!(@(b|B))'));
    assert(isMatch('abcd', '?@(a|b)*@(c)d'));
    assert(isMatch('abcd', '@(ab|a*@(b))*(c)d'));
    assert(isMatch('abcdef', '(a+|b)*'));
    assert(isMatch('abcdef', 'ab**(e|f)'));
    assert(isMatch('abcdef', 'ab*+(e|f)'));
    assert(isMatch('abcdef', 'ab*d+(e|f)'));
    assert(isMatch('abcfef', '(a+|b)*'));
    assert(isMatch('abcfef', 'ab**(e|f)'));
    assert(isMatch('abcfef', 'ab*+(e|f)'));
    assert(isMatch('abcfef', 'ab?*(e|f)'));
    assert(isMatch('abcfefg', '(a+|b)*'));
    assert(isMatch('abcfefg', 'ab**(e|f)'));
    assert(isMatch('abd', '(a+|b)*'));
    assert(isMatch('abd', 'a!(@(b|B))'));
    assert(isMatch('abd', 'ab**(e|f)'));
    assert(isMatch('abd', 'ab?*(e|f)'));
    assert(isMatch('abef', '(a+|b)*'));
    assert(isMatch('abef', 'ab**(e|f)'));
    assert(isMatch('abef', 'ab*+(e|f)'));
    assert(isMatch('abef', 'ab?*(e|f)'));
    assert(isMatch('ac', '*(@(a))a@(c)'));
    assert(isMatch('ac', 'a!(@(b|B))'));
    assert(isMatch('acd', '(a+|b)*'));
    assert(isMatch('acd', '@(ab|a*(b))*(c)d'));
    assert(isMatch('acd', 'a!(@(b|B))'));
    assert(isMatch('acd', 'a!(@(b|B))d'));
    assert(isMatch('ax', '?(a*|b)'));
    assert(isMatch('b', '(a+|b)*'));
    assert(isMatch('b/b', '!(b/a)'));
    assert(isMatch('b/c', '!(b/a)'));
    assert(isMatch('ba', 'b?(a|b)'));
    assert(isMatch('bar', '!(foo)*'));
    assert(isMatch('bar', '!(foo)b*'));
    assert(isMatch('baz', '!(foo)*'));
    assert(isMatch('baz', '!(foo)b*'));
    assert(isMatch('c.a', '!(*[a-b].[a-b]*)'));
    assert(isMatch('c.c', '*!(.a|.b|.c)'));
    assert(isMatch('c.ccc', '!(*.[a-b]*)'));
    assert(isMatch('c.ccc', '!(*[a-b].[a-b]*)'));
    assert(isMatch('c.js', '*!(.js)'));
    assert(isMatch('d.a.d', '!(*.[a-b]*)'));
    assert(isMatch('d.a.d', '!(*[a-b].[a-b]*)'));
    assert(isMatch('d.a.d', '*.!(a)'));
    assert(isMatch('d.a.d', '*.+(b|d)'));
    assert(isMatch('d.d', '!(*.a|*.b|*.c)'));
    assert(isMatch('d.d', '*!(.a|.b|.c)'));
    assert(isMatch('d.d', '*.!(a|b|c)'));
    assert(isMatch('d.js.d', '!(*.js)'));
    assert(isMatch('d.js.d', '*!(.js)'));
    assert(isMatch('d.js.d', '*.!(js)'));
    assert(isMatch('e.e', '!(*.a|*.b|*.c)'));
    assert(isMatch('e.e', '*!(.a|.b|.c)'));
    assert(isMatch('e.e', '*.!(a|b|c)'));
    assert(isMatch('effgz', '@(b+(c)d|e*(f)g?|?(h)i@(j|k))'));
    assert(isMatch('efgz', '@(b+(c)d|e*(f)g?|?(h)i@(j|k))'));
    assert(isMatch('egz', '@(b+(c)d|e*(f)g?|?(h)i@(j|k))'));
    assert(isMatch('egzefffgzbcdij', '*(b+(c)d|e*(f)g?|?(h)i@(j|k))'));
    assert(isMatch('f.a', '*!(.a|.b|.c)'));
    assert(isMatch('f.f', '!(*.a|*.b|*.c)'));
    assert(isMatch('f.f', '*!(.a|.b|.c)'));
    assert(isMatch('f.f', '*.!(a|b|c)'));
    assert(isMatch('fff', '!(f)'));
    assert(isMatch('fff', '*(!(f))'));
    assert(isMatch('fff', '+(!(f))'));
    assert(isMatch('fffooofoooooffoofffooofff', '*(*(f)*(o))'));
    assert(isMatch('ffo', '*(f*(o))'));
    assert(isMatch('fofo', '*(f*(o))'));
    assert(isMatch('fofoofoofofoo', '*(fo|foo)'));
    assert(isMatch('foo', '!(f)'));
    assert(isMatch('foo', '!(x)'));
    assert(isMatch('foo', '!(x)*'));
    assert(isMatch('foo', '*(!(f))'));
    assert(isMatch('foo', '+(!(f))'));
    assert(isMatch('foo.js.js', '*.!(js)'));
    assert(isMatch('foobar', '!(foo)'));
    assert(isMatch('foofoofo', '@(foo|f|fo)*(f|of+(o))'));
    assert(isMatch('fooofoofofooo', '*(f*(o))'));
    assert(isMatch('foooofo', '*(f*(o))'));
    assert(isMatch('foooofof', '*(f*(o))'));
    assert(isMatch('foooxfooxfoxfooox', '*(f*(o)x)'));
    assert(isMatch('foooxfooxfxfooox', '*(f*(o)x)'));
    assert(isMatch('foot', '@(!(z*)|*x)'));
    assert(isMatch('foox', '@(!(z*)|*x)'));
    assert(isMatch('Makefile', '!(*.c|*.h|Makefile.in|config*|README)'));
    assert(isMatch('ofoofo', '*(of+(o))'));
    assert(isMatch('ofoofo', '*(of+(o)|f)'));
    assert(isMatch('ofoooxoofxo', '*(*(of*(o)x)o)'));
    assert(isMatch('ofoooxoofxoofoooxoofxo', '*(*(of*(o)x)o)'));
    assert(isMatch('ofoooxoofxoofoooxoofxoo', '*(*(of*(o)x)o)'));
    assert(isMatch('ofoooxoofxoofoooxoofxooofxofxo', '*(*(of*(o)x)o)'));
    assert(isMatch('ofxoofxo', '*(*(of*(o)x)o)'));
    assert(isMatch('oofooofo', '*(of|oof+(o))'));
    assert(isMatch('ooo', '!(f)'));
    assert(isMatch('ooo', '*(!(f))'));
    assert(isMatch('ooo', '+(!(f))'));
    assert(isMatch('oxfoxoxfox', '*(oxf+(ox))'));
    assert(isMatch('parse.y', '!(*.c|*.h|Makefile.in|config*|README)'));
    assert(isMatch('zoox', '@(!(z*)|*x)'));
  });
});
